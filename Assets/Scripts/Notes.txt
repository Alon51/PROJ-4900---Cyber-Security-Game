From ActivateEvent funtion - case 9:

    Debug.Log("CASE 9------1");
                /*if (bad_event_occured) {
                    final_event_text.text = "An employee accidentally sends a sensitive email to the wrong person."
                        + "\nNP has decreased by 30.";
                    DecreaseNP(30);
                } else {
                    final_event_text.text = GoodMessage();
                }
                */

                current_choice_text ="The Credit Bureau Equifax has a data breach. 143 million Americans have " +
                "their financial information exposed. Click to see if yours was included... ";

                //final_choice_text.text = "The Credit Bureau Equifax has a data breach. 143 million Americans have " +
                //    "their financial information exposed. Click to see if yours was included... ";
                
                // End game -----------------------> MOVE IT TO THE LAST MONTH
                //current_choice_text = "You have finished your work year! " +
                //"Let's see how you did..";

From AcrivateChoice function - case 9:

  Debug.Log("CASE 9------2");
  // TODO - incorporate this into a method
                single_event_box.SetActive(false);

                if (x)
                {
                    if(DataBreach()) {
                        DecreaseNP(50);

                        current_decision_text = "Oh no! Your information was hacked.." +
                            "<i>\nNP has decreased by 50.</i>.";

                        DisplayDecision();
                        
                    } else {
                        current_decision_text = "Fortunately for you, your information remains safe.";

                        DisplayDecision();
                    }
                }
                    //TODO: Might need to complete the else for this section in order to continue to the next month





If Ann wants to send a secret message to Matt, she will have to use some sort of technic to encrypt her message. 
Ann will use OTP encryption by following number of steps.

Assuming Ann would like to send the message: "Hello it is Ann". 
Let's see what she will have to do to use OTP succesfully.

Fitst: Ann will have to count how many letters she has in the sentence. As we can see, in this sentence we have 12 letters. 
Note  that the structure of the sentence will stay the same before and after the encryption.

Second: Ann will generate 12 random numbers to replace with each letter.









switch (dialog.currentSentenceDisplayed)
            {
                case 1:// No need
                    break;
                case 2:// No need
                    break;
                case 3:// No need
                    
                    Debug.Log("case 3");

                    dialog.setProceed(false); // Lock the user from proceeding 

                    while (boy.transform.position.x > 7.0) //Move boy pic:
                    {
                        boyRB.MovePosition(boyRB.position + velocity * Time.fixedDeltaTime);
                    }
                    while (girl.transform.position.x < -7.0) //Move girl pic:
                    {
                        girlRB.MovePosition(girlRB.position + velocity * (-1) * Time.fixedDeltaTime);
                    }
                    //If both pictures of the boy and the girl are in place, start to move the envelope until its x position is 4.3:
                    while (boy.transform.position.x <= 7.0 && girl.transform.position.x >= -7.0 && envelope.transform.position.x < 4.3)
                    {
                        envelope.SetActive(true);
                        envelopeRB.MovePosition(envelopeRB.position + velocity * (-1) * Time.fixedDeltaTime);
                    }

                    if (envelope.transform.position.x >= 4.3) // If the envelope in its posstion:
                    {
                        dialog.setProceed(true); // Let the user continue
                    }

                    break; // End of case 3
                case 4:

                    if (helloItIsAnnText.transform.position.y > 3)
                    {
                        boy.SetActive(false);
                        girl.SetActive(false);
                        envelope.SetActive(false);

                        helloItIsAnnTextRB.MovePosition(helloItIsAnnTextRB.position + new Vector2(0, -5) * Time.fixedDeltaTime);
                    }

                    break;// End of case 4
                case 5:

                    if (arrow.transform.position.x < 4)
                    {
                        dialog.setProceed(false); // lock the continue button
                        arrow.SetActive(true); // Show the arrow in the screen
                        arrowRB.MovePosition(arrowRB.position + velocity * (-1) * Time.fixedDeltaTime);
                    }

                    //This if statment might be outside of the witch, also check if the condition is needed:
                    if (arrow.transform.position.x >= 3.85)// after the arrow got to the end of the sentence, release the lock
                    {
                        dialog.setProceed(true);
                    }

                    break;// End of case 5
                case 6:

                    dialog.setProceed(false); // lock the continue button

                    // move the arrow to the first number - for now I chose the easy way 
                    arrowRB.transform.position = new Vector3(-7.70f, 2.30f);
                    arrow.SetActive(false);

                    // drag out the text upward
                    if (helloItIsAnnText.transform.position.y < 8)
                    {
                        helloItIsAnnTextRB.MovePosition(helloItIsAnnTextRB.position + new Vector2(0, 5) * Time.fixedDeltaTime);
                    }
                    // lower the numbers into the screen
                    if (squares.transform.position.y > -3) // > 0
                    {
                        squaresRB.MovePosition(squaresRB.position + new Vector2(0, -5) * Time.fixedDeltaTime);
                    }

                    if (squares.transform.position.y <= 0) // Show the arrow in it's new postion
                    {
                        arrow.SetActive(true);
                    }

                    /*
                    //generate a number:
                    while (timePassed < 5) // giving 2 seconds to generate a number
                    {
                        //squares_numbers[0].text = "" + Random.Range(1, 26);
                        //Debug.Log(squares_numbers[0].text);
                        Debug.Log(timePassed);
                        timePassed += Time.deltaTime;
                    }*/

                    // generate numbers individually or all together
                    //for (int i = 0; i < squares_numbers.Length; i++)
                    //{
                     //   TimeMachine(2, i);
                        //squares_numbers[i].text = "" + Random.Range(1, 26);
                        /*
                        //move the arrow:
                        while (arrow.transform.position.x < arrow.transform.position.x + 20f)
                        {
                            arrowRB.MovePosition(arrowRB.position + velocity * (-1) * Time.fixedDeltaTime);
                        }*/
                   // }
    
                    break;// End of case 6
                case 7:
                    break;// End of case 7
                case 8:
                    break;// End of case 8
                case 9:
                    break;// End of case 9
                case 10:
                    break;// End of case 10
                case 11:
                    break;// End of case 11
                case 12:
                    break;// End of case 12
                default:
                    break;
            }










From MovingImagesAndText:



                /*
            //generate a number:
            while (timePassed < 5) // giving 2 seconds to generate a number
            {
                //squares_numbers[0].text = "" + Random.Range(1, 26);
                //Debug.Log(squares_numbers[0].text);
                Debug.Log(timePassed);
                timePassed += Time.deltaTime;
            }*/

        /*
            // generate numbers individually or all together
            for (int i = 0; i < squares_numbers.Length; i++)
            {
                TimeMachine(2, i);
                //squares_numbers[i].text = "" + Random.Range(1, 26);
                /*
                //move the arrow:
                while (arrow.transform.position.x < arrow.transform.position.x + 20f)
                {
                    arrowRB.MovePosition(arrowRB.position + velocity * (-1) * Time.fixedDeltaTime);
                }
            }
        }
        */



    /* 
    void TimedfdMachine(float seconds, int boxNumber)
    {
        float tempSeconds = 0;

        while(tempSeconds < seconds)
        {
            squares_numbers[boxNumber].text = "" + Random.Range(1, 26);
            tempSeconds += Time.deltaTime;
        }
        Debug.Log("End of time machine");
    }
    
    
    IEnumerator TypeSentence()
    {
        while (boy.transform.position.x > 3.5) //Move boy pic:
        {
            //boyRB.MovePosition(boyRB.position + velocity * Time.fixedDeltaTime);
            boyRB.velocity = new Vector2(-5, 0); // (X, Y)
        }
        yield return null;
    }
    */

   /* public void IllustrationSceneTen() // DOES NOT WORK WITH THE SPACE BUTTON - MAKE SURE TO DISABLE IT!!!!!
    {
        if (sceneTenToCheck.activeSelf) // if scene 10 is active then use this method
        {
            switch (dialog.currentSentenceDisplayed)
            {
                case (3):// No need
                {
                        dialog.setProceed(false); // Lock the user from proceeding 

                    Debug.Log("1 " + boy.transform.position.x);
                    Debug.Log("2 " + (boyRB.position + velocity * Time.deltaTime));
                        //boyRB.MovePosition(boyRB.position + velocity * Time.deltaTime);
                    StartCoroutine(TypeSentence()); 
                        //while (a<1000000000) //Move boy pic:
                        //{
                           // boyRB.MovePosition(boyRB.position + velocity * Time.fixedDeltaTime);
                           // a++;
                            
                        //}
                    /*
                        while (girl.transform.position.x < -7.0) //Move girl pic:
                        {
                            girlRB.MovePosition(girlRB.position + velocity * (-1) * Time.fixedDeltaTime);
                        }
                        //If both pictures of the boy and the girl are in place, start to move the envelope until its x position is 4.3:
                        while (boy.transform.position.x <= 7.0 && girl.transform.position.x >= -7.0 && envelope.transform.position.x < 4.3)
                        {
                            envelope.SetActive(true);
                            envelopeRB.MovePosition(envelopeRB.position + velocity * (-1) * Time.fixedDeltaTime);
                        }

                        if (envelope.transform.position.x >= 4.3) // If the envelope in its posstion:
                        {
                            dialog.setProceed(true); // Let the user continue
                        }
                   
                }; break; // End of case 3
            }
        /*
        switch (intelligence)
            {
                case 5:
                    print("Why hello there good sir! Let me teach you about Trigonometry!");
                    break;
                case 4:
                    print("Hello and good day!");
                    break;
                case 3:
                    print("Whadya want?");
                    break;
                case 2:
                    print("Grog SMASH!");
                    break;
                case 1:
                    print("Ulg, glib, Pblblblblb");
                    break;
                default:
                    print("Incorrect intelligence level.");
                    break;
            }
        }
    }*/








                case(0):
            {
                    
            };break;
            case (1):
            {


            }; break;
            case (2):
            {


            }; break;
            case (3):
            {
                //demonstademonstration.SetActive(true);
                //scn_main.SetActive(true);
            }; break;
            case (4):
            {

            }; break;
            case (5):
            {
                //movingObjects.MovingEnvelope();
            }; break;
            case (6):
            {
                
            }; break;
            case (7):
            {
                
            }; break;
            case (8):
            {

            }; break;
            case (9):
            {

            }; break;
            case (10):
            {
                
            }; break;

                    switch(dialog.currentSentenceDisplayed)
        {

        }




        //GameObject.FindGameObjectWithTag("scn_main").SetActive(false);


                       /* encryptionAmswer += ((int.Parse(squaresT_random[0].text) + 15) % 26);
                encryptionAmswer += ((int.Parse(squaresT_random[1].text) + 20) % 26);
                encryptionAmswer += ((int.Parse(squaresT_random[2].text) + 16) % 26);
                encryptionAmswer += " ";
                encryptionAmswer += ((int.Parse(squaresT_random[3].text) + 20) % 26);
                encryptionAmswer += ((int.Parse(squaresT_random[4].text) + 8) % 26);
                encryptionAmswer += ((int.Parse(squaresT_random[5].text) + 5) % 26);
                encryptionAmswer += " ";
                encryptionAmswer += ((int.Parse(squaresT_random[6].text) + 2) % 26);
                encryptionAmswer += ((int.Parse(squaresT_random[7].text) + 5) % 26);
                encryptionAmswer += ((int.Parse(squaresT_random[8].text) + 19) % 26);
                encryptionAmswer += ((int.Parse(squaresT_random[9].text) + 20) % 26);*/